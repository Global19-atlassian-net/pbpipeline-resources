{
    "version": "1.0.0",
    "driver": {
        "serialization": "json",
        "exe": "python -m pbfalcon.cli.task_hgap_prepare --resolved-tool-contract ",
        "env": {}
    },
    "schema_version": "2.0.0",
    "tool_contract": {
        "task_type": "pbsmrtpipe.task_types.standard",
        "resource_types": [],
        "description": "XXX Experimental HGAP.5",
        "schema_options": [
            {
                "optionTypeId": "string",
                "default": "5000000",
                "id": "falcon_ns.task_options.HGAP_GenomeLength_str",
                "name": "Genome Length",
                "description": "Approx. number of base pairs expected in the genome. We choose many hidden settings automatically, based on this. (To learn what we generate, see fc_*.cfg, currently called 'falcon_ns.tasks.task_falcon0_build_rdb-PacBio.FileTypes.txt' amongst output files.)"
            },
            {
                "optionTypeId": "string",
                "default": "30",
                "id": "falcon_ns.task_options.HGAP_SeedCoverage_str",
                "name": "Seed coverage",
                "description": "A target for the total # of bases in the 'raw' (post primary) reads, divided by the total number in the 'seed' reads."
            },
            {
                "optionTypeId": "string",
                "default": "-1",
                "id": "falcon_ns.task_options.HGAP_SeedLengthCutoff_str",
                "name": "Seed length cutoff",
                "description": "Only reads as long as this will be used as 'seeds' for the draft assembly. (Shorter reads will be used for correction and polishing, if they pass the dataset filters.) If '-1', then this will be calculated automatically, such that the total number of seed bases nearly equals GenomeLength*SeedCoverage."
            },
            {
                "optionTypeId": "string",
                "default": "{\n    \"~for_now_see\": \"https://github.com/PacificBiosciences/ExperimentalPipelineOptionsDocs/blob/master/HGAP/defaults.md\"\n}\n",
                "id": "falcon_ns.task_options.HGAP_Options_JSON",
                "name": "Experimental HGAP.5 config overrides.",
                "description": "Experimental HGAP.5 config overrides are experimental."
            }
        ],
        "output_types": [
            {
                "title": "HGAP JSON file",
                "description": "Output: Actual configuration to be used by HGAP, in a 2-level dictionary.",
                "default_name": "hgap-cfg",
                "id": "hgap-cfg-out",
                "file_type_id": "PacBio.FileTypes.json"
            },
            {
                "title": "Python logging.config JSON file",
                "description": "Output: Standard Python logging.config (for the task, not pbsmrtpipe)",
                "default_name": "logging-cfg",
                "id": "logging-cfg-out",
                "file_type_id": "PacBio.FileTypes.json"
            },
            {
                "title": "Log-file from Python logger",
                "description": "Output: log-file",
                "default_name": "out1",
                "id": "out",
                "file_type_id": "PacBio.FileTypes.log"
            }
        ],
        "_comment": "Created by pbcommand 0.6.11",
        "name": "XXX Experimental HgapConfigGenerator",
        "input_types": [
            {
                "description": "Input: Probably BAM files",
                "title": "DataSet-SubreadSet",
                "id": "subreads-in",
                "file_type_id": "PacBio.DataSet.SubreadSet"
            }
        ],
        "nproc": "$max_nproc",
        "is_distributed": true,
        "tool_contract_id": "falcon_ns.tasks.task_hgap_prepare"
    },
    "tool_contract_id": "falcon_ns.tasks.task_hgap_prepare"
}
