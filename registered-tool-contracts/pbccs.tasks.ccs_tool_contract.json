{
    "driver": {
        "env": {},
        "exe": "ccs --resolved-tool-contract",
        "serialization": "json"
    },
    "schema_version": "2.0.0",
    "tool_contract": {
        "_comment": "Created by v0.1.0",
        "description": "Generate circular consensus sequences (ccs) from subreads.",
        "input_types": [
            {
                "description": "Subread DataSet or .bam file",
                "file_type_id": "PacBio.DataSet.SubreadSet",
                "id": "subread_set",
                "title": "SubreadSet"
            }
        ],
        "is_distributed": true,
        "name": "ccs",
        "nproc": "$max_nproc",
        "output_types": [
            {
                "default_name": "ccs",
                "description": "Consensus sequences generated by CCS2",
                "file_type_id": "PacBio.DataSet.ConsensusReadSet",
                "id": "bam_output",
                "title": "Consensus Sequences"
            }
        ],
        "resource_types": [],
        "schema_options": [
            {
                "default": false,
                "description": "Generate a consensus for each strand.",
                "id": "pbccs.task_options.by_strand",
                "name": "By Strand CCS",
                "optionTypeId": "boolean"
            },
            {
                "default": 0.34,
                "description": "Maximum fraction of subreads that can be dropped before giving up.",
                "id": "pbccs.task_options.max_drop_fraction",
                "name": "Maximum Dropped Fraction",
                "optionTypeId": "float"
            },
            {
                "default": 7000,
                "description": "Maximum length of subreads to use for generating CCS.",
                "id": "pbccs.task_options.max_length",
                "name": "Maximum Subread Length",
                "optionTypeId": "integer"
            },
            {
                "default": 0.82,
                "description": "Minimum identity to the POA to use a subread. 0 disables this filter.",
                "id": "pbccs.task_options.min_identity",
                "name": "Minimum Identity",
                "optionTypeId": "float"
            },
            {
                "default": 10,
                "description": "Minimum length of subreads to use for generating CCS.",
                "id": "pbccs.task_options.min_length",
                "name": "Minimum Subread Length",
                "optionTypeId": "integer"
            },
            {
                "default": 3,
                "description": "Minimum number of subreads required to generate CCS.",
                "id": "pbccs.task_options.min_passes",
                "name": "Minimum Number of Passes",
                "optionTypeId": "integer"
            },
            {
                "default": 0.9,
                "description": "Minimum predicted accuracy in [0, 1].",
                "id": "pbccs.task_options.min_predicted_accuracy",
                "name": "Minimum Predicted Accuracy",
                "optionTypeId": "float"
            },
            {
                "default": 0.75,
                "description": "Minimum read score of input subreads.",
                "id": "pbccs.task_options.min_read_score",
                "name": "Minimal Read Score",
                "optionTypeId": "float"
            },
            {
                "default": 3.75,
                "description": "Minimum SNR of input subreads.",
                "id": "pbccs.task_options.min_snr",
                "name": "Minimum SNR",
                "optionTypeId": "float"
            },
            {
                "default": -3.4,
                "description": "Minimum z-score to use a subread. NaN disables this filter.",
                "id": "pbccs.task_options.min_zscore",
                "name": "Minimum Z Score",
                "optionTypeId": "float"
            },
            {
                "default": "",
                "description": "Path to a model file or directory containing model files.",
                "id": "pbccs.task_options.model_path",
                "name": "Model(s) Path",
                "optionTypeId": "string"
            },
            {
                "default": "",
                "description": "Name of chemistry or model to use, overriding default selection.",
                "id": "pbccs.task_options.model_spec",
                "name": "Model Override",
                "optionTypeId": "string"
            },
            {
                "default": true,
                "description": "Emit high-accuracy CCS sequences polished using the Arrow algorithm",
                "id": "pbccs.task_options.polish",
                "name": "Polish CCS",
                "optionTypeId": "boolean"
            },
            {
                "default": "ccs_report.txt",
                "description": "Where to write the results report.",
                "id": "pbccs.task_options.report_file",
                "name": "Report File Output",
                "optionTypeId": "string"
            },
            {
                "default": false,
                "description": "Emit dq, iq, and sq \"rich\" quality tracks.",
                "id": "pbccs.task_options.rich_qvs",
                "name": "Emit individual QVs",
                "optionTypeId": "boolean"
            }
        ],
        "task_type": "pbsmrtpipe.task_types.standard",
        "tool_contract_id": "pbccs.tasks.ccs"
    },
    "tool_contract_id": "pbccs.tasks.ccs",
    "version": "3.0.0 (commit d48dfdf)"
}
